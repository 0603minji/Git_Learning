< Git Hub >
  - Git으로 관리하는 모든 프로젝트를 원격 저장소(온라인 공간)에 공유
  - 코드 공유 및 협업 서비스
  - 개발자들이 협업하여 개발, 관리하기 위한 플랫폼
  - 모든 업로드와 다운로드를 커밋 단위로 수행
  - 먼저 공유된 최신 버전으로 본인 프로젝트를 업데이트하고 나서야 업로드 가능
  - 충돌할 걱정 없이 깃허브가 중간에서 교통 정리


< 원격 저장소에 Push >
  - 원격 저장소 = Repository
  - Push : 로컬 컴퓨터에 있는 저장소에서 작업한 내용을 원격 저장소로 전송
            (.git이 관리하는 폴더를 깃허브로 업로드)
  - $ git remote add [원격 저장소 이름] [원격 저장소 주소]
          : 원격 저장소를 추가
  - $ git push -u [원격 저장소] [원격 저장소의 브랜치]
          : 어느 원격 저장소(origin)의 어느 브랜치(main)에 push할 것인지 기본값으로 설정
          : 이후로는 $ git push만 입력해도 origin/main 브랜치로 push
          : 로컬에 있는 커밋 내역 중에서 원격 저장소에 없는 커밋을 업로드
  - $ git remote
          : 해당 프로젝트와 연결된 원격 저장소 목록 확인
  - $ git remote -v
          : 원격 저장소의 주소 확인


< 원격 저장소에서 Clone >
  - 원격 저장소에 있는 프로젝트 파일 및 깃의 관리 내역 모두 로컬에 다운로드
      1. 다운로드 받을 폴더에서 Git-Bash 열기
      2. $ git clone [원격 저장소 주소] 입력
      3. VS Code에서 다운받은 폴더 열기


< Push >
  - 로컬 저장소에서 작업한 내용을 원격 저장소로 전송
  - 로컬의 변경 사항을 원격 저장소로 업데이트
  - $ git push -u origin main (현재 브랜치에서 기본값으로 푸시할 곳)
  - $ git push (기본값 설정 후 push명령만 사용가능)


< Pull >
  - 원격 저장소에서 변경한 내용을 로컬 저장소로 다운로드
  - 깃 허브 원격 저장소의 커밋을 내 로컬 컴퓨터로 다운로드
  - $ git pull
